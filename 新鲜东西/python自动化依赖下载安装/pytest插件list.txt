pytest-rerunfailures   失败重跑
多重校验 pytest-assume
设定执行顺序 pytest-ordering
分布式测试(pytest-xdist)
生产报告（pytest-html）

1.pytest-html
作用：生成可视化，推荐本地测试时使用
官网：https://pypi.org/project/pytest-html/

2.pytest-allure-adaptor
作用：生成精美的测试报告，推荐持续集成时使用
官网：https://pypi.org/project/pytest-allure-adaptor/

3.pytest-rerunfailures
作用：自动重跑失败用例 --reruns n ,n是重复次数
官网：https://pypi.org/project/pytest-rerunfailures/3.1/

4.pytest-cache
作用：重跑上次失败的案例，推荐持续集成中使用，t提高分析效率
官网：https://pypi.org/project/pytest-cache/

5.pytest-ordering
作用：可指定一个测试套件中所有用例的执行顺序
官网：https://pypi.org/project/pytest-ordering/

6.pytest-sugar
作用：改变pytest默认外观，增加进度条，并显示失败的用例，不需要配置，只需点击安装pytest-sugar，用pytest运行你的测试，可获得更漂亮，更有用的输出。
官网：https://pypi.org/project/pytest-sugar/

7.pytest-xdist
作用：开启多个worker进程，并行执行多个测试用例pytest -u 2，在2个cpu上运行测试 --looponfail标志，自动重新运行失败用例，达到并发运行的效果
官网：https://pypi.org/project/pytest-xdist/

8.pytest-picked
作用：运行已修改但尚未提交的代码测试，安装库并使用pytest-picked运行测试
官网：https://pypi.org/project/pytest-picked/

9.pytest-tldr
作用：tldr代表“太长，未读”），默认将输出限制为仅用于失败测试的回溯，而忽略了一些令人讨厌的颜色编码，而不是pytest的默认输出。添加-v标志会返回更详细的输出。
官网：https://pypi.org/project/pytest-tldr/

10.pytest-django
作用：为Django应用程序和项目添加了pytest支持。pytest-django引入了使用pytest fixture测试Django项目的能力，省略了导入unittest和复制/粘贴其他样板测试代码的需要，并且比标准的Django测试套件运行得更快。
官网：https://pypi.org/project/pytest-django/

11.pytest-selenium
作用：pytest提供运行支持selenium为基础
官网：https://pypi.org/project/pytest-selenium/

12.pytest-cov
作用：增加了pytest的覆盖支持，显示哪些代码已经测试，哪些代码没有。包括项目的测试覆盖率！